{"version":3,"sources":["chart-area-demo.js","chart-pie-demo.js","chart-bar-demo.js"],"names":["number_format","number","decimals","dec_point","thousands_sep","replace","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixedFix","split","length","Array","join","Chart","defaults","global","defaultFontFamily","defaultFontColor","ctx","document","getElementById","myLineChart","type","data","labels","datasets","label","lineTension","backgroundColor","borderColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","pointBorderWidth","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","time","unit","gridLines","display","drawBorder","ticks","maxTicksLimit","yAxes","callback","value","index","values","color","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","borderWidth","xPadding","yPadding","displayColors","intersect","mode","caretPadding","callbacks","tooltipItem","chart","datasetIndex","yLabel","myPieChart","hoverBackgroundColor","hoverBorderColor","cutoutPercentage","myBarChart","maxBarThickness","min","max"],"mappings":"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","file":"demo-charts.min.js","sourcesContent":["// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\nfunction number_format(number, decimals, dec_point, thousands_sep) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + '').replace(',', '').replace(' ', '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n    s = '',\n    toFixedFix = function(n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n\n// Area Chart Example\nvar ctx = document.getElementById(\"myAreaChart\");\nvar myLineChart = new Chart(ctx, {\n  type: 'line',\n  data: {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [{\n      label: \"Earnings\",\n      lineTension: 0.3,\n      backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n      borderColor: \"rgba(78, 115, 223, 1)\",\n      pointRadius: 3,\n      pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n      pointBorderColor: \"rgba(78, 115, 223, 1)\",\n      pointHoverRadius: 3,\n      pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n      pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n      pointHitRadius: 10,\n      pointBorderWidth: 2,\n      data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],\n    }],\n  },\n  options: {\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 10,\n        right: 25,\n        top: 25,\n        bottom: 0\n      }\n    },\n    scales: {\n      xAxes: [{\n        time: {\n          unit: 'date'\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          maxTicksLimit: 7\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          maxTicksLimit: 5,\n          padding: 10,\n          // Include a dollar sign in the ticks\n          callback: function(value, index, values) {\n            return '$' + number_format(value);\n          }\n        },\n        gridLines: {\n          color: \"rgb(234, 236, 244)\",\n          zeroLineColor: \"rgb(234, 236, 244)\",\n          drawBorder: false,\n          borderDash: [2],\n          zeroLineBorderDash: [2]\n        }\n      }],\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"rgb(255,255,255)\",\n      bodyFontColor: \"#858796\",\n      titleMarginBottom: 10,\n      titleFontColor: '#6e707e',\n      titleFontSize: 14,\n      borderColor: '#dddfeb',\n      borderWidth: 1,\n      xPadding: 15,\n      yPadding: 15,\n      displayColors: false,\n      intersect: false,\n      mode: 'index',\n      caretPadding: 10,\n      callbacks: {\n        label: function(tooltipItem, chart) {\n          var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n          return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\n        }\n      }\n    }\n  }\n});\n","// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\n// Pie Chart Example\nvar ctx = document.getElementById(\"myPieChart\");\nvar myPieChart = new Chart(ctx, {\n  type: 'doughnut',\n  data: {\n    labels: [\"Direct\", \"Referral\", \"Social\"],\n    datasets: [{\n      data: [55, 30, 15],\n      backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\n      hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\n      hoverBorderColor: \"rgba(234, 236, 244, 1)\",\n    }],\n  },\n  options: {\n    maintainAspectRatio: false,\n    tooltips: {\n      backgroundColor: \"rgb(255,255,255)\",\n      bodyFontColor: \"#858796\",\n      borderColor: '#dddfeb',\n      borderWidth: 1,\n      xPadding: 15,\n      yPadding: 15,\n      displayColors: false,\n      caretPadding: 10,\n    },\n    legend: {\n      display: false\n    },\n    cutoutPercentage: 80,\n  },\n});\n","// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\nfunction number_format(number, decimals, dec_point, thousands_sep) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + '').replace(',', '').replace(' ', '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n    s = '',\n    toFixedFix = function(n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n\n// Bar Chart Example\nvar ctx = document.getElementById(\"myBarChart\");\nvar myBarChart = new Chart(ctx, {\n  type: 'bar',\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n    datasets: [{\n      label: \"Revenue\",\n      backgroundColor: \"#4e73df\",\n      hoverBackgroundColor: \"#2e59d9\",\n      borderColor: \"#4e73df\",\n      data: [4215, 5312, 6251, 7841, 9821, 14984],\n    }],\n  },\n  options: {\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 10,\n        right: 25,\n        top: 25,\n        bottom: 0\n      }\n    },\n    scales: {\n      xAxes: [{\n        time: {\n          unit: 'month'\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          maxTicksLimit: 6\n        },\n        maxBarThickness: 25,\n      }],\n      yAxes: [{\n        ticks: {\n          min: 0,\n          max: 15000,\n          maxTicksLimit: 5,\n          padding: 10,\n          // Include a dollar sign in the ticks\n          callback: function(value, index, values) {\n            return '$' + number_format(value);\n          }\n        },\n        gridLines: {\n          color: \"rgb(234, 236, 244)\",\n          zeroLineColor: \"rgb(234, 236, 244)\",\n          drawBorder: false,\n          borderDash: [2],\n          zeroLineBorderDash: [2]\n        }\n      }],\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      titleMarginBottom: 10,\n      titleFontColor: '#6e707e',\n      titleFontSize: 14,\n      backgroundColor: \"rgb(255,255,255)\",\n      bodyFontColor: \"#858796\",\n      borderColor: '#dddfeb',\n      borderWidth: 1,\n      xPadding: 15,\n      yPadding: 15,\n      displayColors: false,\n      caretPadding: 10,\n      callbacks: {\n        label: function(tooltipItem, chart) {\n          var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n          return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\n        }\n      }\n    },\n  }\n});\n"]}