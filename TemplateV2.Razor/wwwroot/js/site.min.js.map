{"version":3,"sources":["chart-area-demo.js","chart-bar-demo.js","chart-pie-demo.js","site.js"],"names":["number_format","number","decimals","dec_point","thousands_sep","replace","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixedFix","split","length","Array","join","ctx","Chart","defaults","global","defaultFontFamily","defaultFontColor","document","getElementById","myLineChart","type","data","labels","datasets","label","lineTension","backgroundColor","borderColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","pointBorderWidth","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","time","unit","gridLines","display","drawBorder","ticks","maxTicksLimit","yAxes","callback","value","index","values","color","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","borderWidth","xPadding","yPadding","displayColors","intersect","mode","caretPadding","callbacks","tooltipItem","chart","datasetIndex","yLabel","myPieChart","hoverBackgroundColor","hoverBorderColor","cutoutPercentage","myBarChart","maxBarThickness","min","max","TOAST_DELAY_SECONDS","IDLE_SECONDS","IDLE_TIMEOUT_SECONDS","IDLE_TIMEOUT_MODAL_SECONDS","AUTO_LOGOUT_IS_ENABLED","IS_BEATING","HEARTBEAT_INTERVAL","NotifcationType","INFORMATION","SUCCESS","WARNING","ERROR","second","minute","GlobalViewModel","configJson","notificationsJson","configItems","JSON","parse","Items","filter","item","Key","Int_Value","Boolean_Value","notifications","undefined","this","initialise","$","ready","each","i","showNotification","Message","Type","tooltip","on","dataContainer","parent","siblings","empty","propertyName","attr","val","forEach","append","keydown","e","el","preventDefault","test","id","relatedTarget","find","datetimepicker","format","date","moment","fn","dataTable","ext","errMode","settings","helpPage","message","console","log","enableAutoLogout","heartbeat","ajax","setTimeout","expiryModalSeconds","expirySeconds","expiryTime","Date","getTime","isLoggingOut","mousemove","isModalOpen","resetExpiryTime","keypress","click","setInterval","modal","backdrop","keyboard","secondsRemaining","floor","window","location","innerText","is","autoHide","typeCss","notificationHeading","toast","autohide","delay","resetToolTips","buildTooltipList","dictionary","list","infoItems","info","hasOwnProperty","push","o","getLastActionDate","session","defaultExpirationMinutes","lastSessionLogDate","last_Session_Event_Date","lastSessionEventDate","last_Session_Log_Date","lastDate","startDate","entity","created_Date","setMinutes","getMinutes"],"mappings":"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","file":"site.min.js","sourcesContent":["// Set new default font family and font color to mimic Bootstrap's default styling\r\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\r\nChart.defaults.global.defaultFontColor = '#858796';\r\n\r\nfunction number_format(number, decimals, dec_point, thousands_sep) {\r\n  // *     example: number_format(1234.56, 2, ',', ' ');\r\n  // *     return: '1 234,56'\r\n  number = (number + '').replace(',', '').replace(' ', '');\r\n  var n = !isFinite(+number) ? 0 : +number,\r\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\r\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n    s = '',\r\n    toFixedFix = function(n, prec) {\r\n      var k = Math.pow(10, prec);\r\n      return '' + Math.round(n * k) / k;\r\n    };\r\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\r\n  if (s[0].length > 3) {\r\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n  }\r\n  if ((s[1] || '').length < prec) {\r\n    s[1] = s[1] || '';\r\n    s[1] += new Array(prec - s[1].length + 1).join('0');\r\n  }\r\n  return s.join(dec);\r\n}\r\n\r\n// Area Chart Example\r\nvar ctx = document.getElementById(\"myAreaChart\");\r\nif (ctx) {\r\n    var myLineChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n            datasets: [{\r\n                label: \"Earnings\",\r\n                lineTension: 0.3,\r\n                backgroundColor: \"rgba(78, 115, 223, 0.05)\",\r\n                borderColor: \"rgba(78, 115, 223, 1)\",\r\n                pointRadius: 3,\r\n                pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\r\n                pointBorderColor: \"rgba(78, 115, 223, 1)\",\r\n                pointHoverRadius: 3,\r\n                pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\r\n                pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\r\n                pointHitRadius: 10,\r\n                pointBorderWidth: 2,\r\n                data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],\r\n            }],\r\n        },\r\n        options: {\r\n            maintainAspectRatio: false,\r\n            layout: {\r\n                padding: {\r\n                    left: 10,\r\n                    right: 25,\r\n                    top: 25,\r\n                    bottom: 0\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    time: {\r\n                        unit: 'date'\r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                        drawBorder: false\r\n                    },\r\n                    ticks: {\r\n                        maxTicksLimit: 7\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        maxTicksLimit: 5,\r\n                        padding: 10,\r\n                        // Include a dollar sign in the ticks\r\n                        callback: function (value, index, values) {\r\n                            return '$' + number_format(value);\r\n                        }\r\n                    },\r\n                    gridLines: {\r\n                        color: \"rgb(234, 236, 244)\",\r\n                        zeroLineColor: \"rgb(234, 236, 244)\",\r\n                        drawBorder: false,\r\n                        borderDash: [2],\r\n                        zeroLineBorderDash: [2]\r\n                    }\r\n                }],\r\n            },\r\n            legend: {\r\n                display: false\r\n            },\r\n            tooltips: {\r\n                backgroundColor: \"rgb(255,255,255)\",\r\n                bodyFontColor: \"#858796\",\r\n                titleMarginBottom: 10,\r\n                titleFontColor: '#6e707e',\r\n                titleFontSize: 14,\r\n                borderColor: '#dddfeb',\r\n                borderWidth: 1,\r\n                xPadding: 15,\r\n                yPadding: 15,\r\n                displayColors: false,\r\n                intersect: false,\r\n                mode: 'index',\r\n                caretPadding: 10,\r\n                callbacks: {\r\n                    label: function (tooltipItem, chart) {\r\n                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\r\n                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n","// Set new default font family and font color to mimic Bootstrap's default styling\r\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\r\nChart.defaults.global.defaultFontColor = '#858796';\r\n\r\nfunction number_format(number, decimals, dec_point, thousands_sep) {\r\n  // *     example: number_format(1234.56, 2, ',', ' ');\r\n  // *     return: '1 234,56'\r\n  number = (number + '').replace(',', '').replace(' ', '');\r\n  var n = !isFinite(+number) ? 0 : +number,\r\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\r\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n    s = '',\r\n    toFixedFix = function(n, prec) {\r\n      var k = Math.pow(10, prec);\r\n      return '' + Math.round(n * k) / k;\r\n    };\r\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\r\n  if (s[0].length > 3) {\r\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n  }\r\n  if ((s[1] || '').length < prec) {\r\n    s[1] = s[1] || '';\r\n    s[1] += new Array(prec - s[1].length + 1).join('0');\r\n  }\r\n  return s.join(dec);\r\n}\r\n\r\n// Bar Chart Example\r\nvar ctx = document.getElementById(\"myBarChart\");\r\nif (ctx) {\r\n    var myBarChart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n            datasets: [{\r\n                label: \"Revenue\",\r\n                backgroundColor: \"#4e73df\",\r\n                hoverBackgroundColor: \"#2e59d9\",\r\n                borderColor: \"#4e73df\",\r\n                data: [4215, 5312, 6251, 7841, 9821, 14984],\r\n            }],\r\n        },\r\n        options: {\r\n            maintainAspectRatio: false,\r\n            layout: {\r\n                padding: {\r\n                    left: 10,\r\n                    right: 25,\r\n                    top: 25,\r\n                    bottom: 0\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    time: {\r\n                        unit: 'month'\r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                        drawBorder: false\r\n                    },\r\n                    ticks: {\r\n                        maxTicksLimit: 6\r\n                    },\r\n                    maxBarThickness: 25,\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 15000,\r\n                        maxTicksLimit: 5,\r\n                        padding: 10,\r\n                        // Include a dollar sign in the ticks\r\n                        callback: function (value, index, values) {\r\n                            return '$' + number_format(value);\r\n                        }\r\n                    },\r\n                    gridLines: {\r\n                        color: \"rgb(234, 236, 244)\",\r\n                        zeroLineColor: \"rgb(234, 236, 244)\",\r\n                        drawBorder: false,\r\n                        borderDash: [2],\r\n                        zeroLineBorderDash: [2]\r\n                    }\r\n                }],\r\n            },\r\n            legend: {\r\n                display: false\r\n            },\r\n            tooltips: {\r\n                titleMarginBottom: 10,\r\n                titleFontColor: '#6e707e',\r\n                titleFontSize: 14,\r\n                backgroundColor: \"rgb(255,255,255)\",\r\n                bodyFontColor: \"#858796\",\r\n                borderColor: '#dddfeb',\r\n                borderWidth: 1,\r\n                xPadding: 15,\r\n                yPadding: 15,\r\n                displayColors: false,\r\n                caretPadding: 10,\r\n                callbacks: {\r\n                    label: function (tooltipItem, chart) {\r\n                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\r\n                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    });\r\n}\r\n","// Set new default font family and font color to mimic Bootstrap's default styling\r\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\r\nChart.defaults.global.defaultFontColor = '#858796';\r\n\r\n// Pie Chart Example\r\nvar ctx = document.getElementById(\"myPieChart\");\r\nif (ctx) {\r\n    var myPieChart = new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: {\r\n            labels: [\"Direct\", \"Referral\", \"Social\"],\r\n            datasets: [{\r\n                data: [55, 30, 15],\r\n                backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\r\n                hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\r\n                hoverBorderColor: \"rgba(234, 236, 244, 1)\",\r\n            }],\r\n        },\r\n        options: {\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n                backgroundColor: \"rgb(255,255,255)\",\r\n                bodyFontColor: \"#858796\",\r\n                borderColor: '#dddfeb',\r\n                borderWidth: 1,\r\n                xPadding: 15,\r\n                yPadding: 15,\r\n                displayColors: false,\r\n                caretPadding: 10,\r\n            },\r\n            legend: {\r\n                display: false\r\n            },\r\n            cutoutPercentage: 80,\r\n        },\r\n    });\r\n}\r\n","// default values \r\nTOAST_DELAY_SECONDS = 6; // toasts last 6 seconds\r\nIDLE_SECONDS = 0;\r\nIDLE_TIMEOUT_SECONDS = 120; // 2 minutes\r\nIDLE_TIMEOUT_MODAL_SECONDS = IDLE_TIMEOUT_SECONDS - 30; // 30 seconds before session expires\r\nAUTO_LOGOUT_IS_ENABLED = false;\r\nIS_BEATING = false;\r\nHEARTBEAT_INTERVAL = 5000; // milliseconds\r\n\r\n// from the Notifications/Enums.cs file\r\nconst NotifcationType = {\r\n    INFORMATION: 1,\r\n    SUCCESS: 2,\r\n    WARNING: 3,\r\n    ERROR: 4\r\n};\r\n\r\n// millisecond groups\r\nconst second = 1000;\r\nconst minute = second * 60;\r\n\r\nfunction GlobalViewModel(configJson, notificationsJson) {\r\n    var self = this;\r\n\r\n    var configItems = JSON.parse(configJson).Items;\r\n\r\n    TOAST_DELAY_SECONDS = configItems.filter(function (item) { return item.Key === 'TOAST_DELAY_SECONDS'; })[0].Int_Value;\r\n    IDLE_TIMEOUT_SECONDS = configItems.filter(function (item) { return item.Key === 'IDLE_TIMEOUT_SECONDS'; })[0].Int_Value;\r\n    IDLE_TIMEOUT_MODAL_SECONDS = configItems.filter(function (item) { return item.Key === 'IDLE_TIMEOUT_MODAL_SECONDS'; })[0].Int_Value;\r\n    AUTO_LOGOUT_IS_ENABLED = configItems.filter(function (item) { return item.Key === 'AUTO_LOGOUT_IS_ENABLED'; })[0].Boolean_Value;\r\n\r\n    var notifications = (notificationsJson === '' || notificationsJson === undefined) ? [] : JSON.parse(notificationsJson);\r\n\r\n    self.initialise = function () {\r\n\r\n        $(document).ready(function () {\r\n\r\n            // display any server rendered notifications\r\n            $(notifications).each(function (i, n) {\r\n                showNotification(n.Message, n.Type, true);\r\n            });\r\n\r\n            // enable tooltips\r\n            $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n            // multiselect component\r\n            $('.selectpicker').on('changed.bs.select', function () {\r\n\r\n                // find any existing input fields and remove them\r\n                var dataContainer = $(this).parent('.dropdown').siblings('.selectpicker-data');\r\n                dataContainer.empty();\r\n\r\n                // generate the name property for input fields\r\n                var id = $(this).attr('id');\r\n                var propertyName = id.replace('_', '.');\r\n\r\n                // create input fields for selected values\r\n                var selectedValues = $(this).val();\r\n                selectedValues.forEach(function (value) {\r\n                    dataContainer.append(\"<input type='hidden' name='\" + propertyName + \"' value=\" + value + \"></div>\");\r\n                });\r\n\r\n            });\r\n\r\n            // datetime picker - prevent explicit user input\r\n            $(\".datetimepicker-input\").keydown(function (e, el) {\r\n                e.preventDefault();\r\n                return false();\r\n            });\r\n\r\n            // number input only\r\n            $(\".input-only-number\").keydown(function (e, el) {\r\n                if (/^\\d*$/.test(value)) {\r\n                    return true;\r\n                }\r\n                e.preventDefault();\r\n                return false();\r\n            });\r\n\r\n            // modals - pass id parameter to hidden field on modal\r\n            $('.modal').on('show.bs.modal', function (e) {\r\n\r\n                var id = $(e.relatedTarget).data('target-id');\r\n\r\n                // populate modal form id element\r\n                $(this).find('input[type=hidden][name=\"Id\"]').val(id);\r\n\r\n            });\r\n\r\n            // datapickers\r\n            $(\".datepicker\").datetimepicker({\r\n                format: 'DD/MM/YYYY'\r\n            });\r\n\r\n            $(\".timepicker\").datetimepicker({\r\n                format: 'hh:mm A'\r\n            });\r\n\r\n            $(\".datetimepicker\").datetimepicker({\r\n                format: 'DD/MM/YYYY hh:mm A'\r\n            });\r\n\r\n            $(\".datepicker, .datetimepicker, .datepicker\").on(\"change.datetimepicker\", function (e) {\r\n                if (e.date) {\r\n                    $(this).attr('data-date', moment(e.date).format('DD/MMMM/YYYY'));\r\n                }\r\n            });\r\n\r\n            // datatables ajax error handling\r\n            if ($.fn.dataTable) {\r\n                $.fn.dataTable.ext.errMode = function (settings, helpPage, message) {\r\n                    showNotification(message, NotifcationType.ERROR, false);\r\n                    console.log(message);\r\n                };\r\n            }\r\n\r\n            // auto logout feature\r\n            if (AUTO_LOGOUT_IS_ENABLED === true) {\r\n                enableAutoLogout(IDLE_TIMEOUT_MODAL_SECONDS, IDLE_TIMEOUT_SECONDS);\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nfunction heartbeat() {\r\n    if (IS_BEATING === false) {\r\n\r\n        IS_BEATING = true;\r\n        $.ajax('/Session/Heartbeat');\r\n\r\n        setTimeout(function () {\r\n            IS_BEATING = false;\r\n        }, HEARTBEAT_INTERVAL);\r\n    }\r\n}\r\n\r\n// enables the autologut feature\r\nfunction enableAutoLogout(expiryModalSeconds, expirySeconds) {\r\n    var expiryTime = new Date().getTime() + (expirySeconds * 1000);\r\n\r\n    if ($('#modalAutoLogout')[0]) { // check if we have the modal available\r\n\r\n        var isLoggingOut = false;\r\n\r\n        // reset idle timer on mouse / keypress movement\r\n        $(this).mousemove(function (e) {\r\n            if (isModalOpen() === false) {\r\n                resetExpiryTime(expirySeconds);\r\n            }\r\n        });\r\n        $(this).keypress(function (e) {\r\n            if (isModalOpen() === false) {\r\n                resetExpiryTime(expirySeconds);\r\n            }\r\n        });\r\n\r\n        $('#btnDismissAutoLogout').click(function () {\r\n            resetExpiryTime(expirySeconds);\r\n        });\r\n\r\n        setInterval(function () {\r\n            IDLE_SECONDS++;\r\n\r\n            // show the modal if the user is idle for too long\r\n            if (IDLE_SECONDS >= expiryModalSeconds) {\r\n                $('#modalAutoLogout').modal({\r\n                    backdrop: \"static\",\r\n                    keyboard: false\r\n                });\r\n\r\n                // determine how many seconds are remaining and log the user out if their session has expired\r\n                var secondsRemaining = Math.floor(((getExpiryTime() - new Date().getTime()) % (minute)) / second);\r\n                if (secondsRemaining < 0 && isLoggingOut === false) {\r\n\r\n                    secondsRemaining = 0;\r\n                    isLoggingOut = true;\r\n                    window.location = '/Account/Logout';\r\n                    return;\r\n\r\n                }\r\n\r\n                // display how many seconds are let\r\n                document.getElementById('txtAutoLogoutSecondsRemaining').innerText = secondsRemaining;\r\n            }\r\n        }, 1000); // poll every 1 second\r\n    }\r\n\r\n    function isModalOpen() {\r\n        return $('#modalAutoLogout').is(':visible');\r\n    }\r\n\r\n    function getExpiryTime() {\r\n        return expiryTime;\r\n    }\r\n\r\n    function resetExpiryTime(expirySeconds) {\r\n        expiryTime = new Date().getTime() + (expirySeconds * 1000);\r\n        IDLE_SECONDS = 0;\r\n\r\n        heartbeat();\r\n    }\r\n}\r\n\r\n// displays a toast notification\r\nfunction showNotification(message, type, autoHide) {\r\n\r\n    // determine which css class to use\r\n    var typeCss = '';\r\n    var notificationHeading = '';\r\n\r\n    if (type === NotifcationType.INFORMATION || type ===  1) {\r\n        typeCss = 'bg-primary';\r\n        notificationHeading = 'Information';\r\n    }\r\n    if (type === NotifcationType.SUCCESS || type ===  2) {\r\n        typeCss = 'bg-success';\r\n        notificationHeading = 'Success';\r\n    }\r\n    if (type === NotifcationType.WARNING || type ===  3) {\r\n        typeCss = 'bg-warning';\r\n        notificationHeading = 'Warning';\r\n    }\r\n    if (type === NotifcationType.ERROR || type ===  4) {\r\n        typeCss = 'bg-danger';\r\n        notificationHeading = 'Error';\r\n    }\r\n\r\n    // add the notification html\r\n    $(\"#notifications-container\").append('<div class=\"toast ml-auto m-4\" role=\"alert\">' +\r\n        '<div class=\"toast-header ' + typeCss + '\">' +\r\n        '<strong class=\"mr-auto text-white\">' + notificationHeading + '</strong>' +\r\n        '<button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">' +\r\n        '<span aria-hidden=\"true\">×</span>' +\r\n        '</button>' +\r\n        '</div>' +\r\n        '<div class=\"toast-body\">' +\r\n        message +\r\n        '</div>' +\r\n        '</div>');\r\n\r\n    // show the notification that we have just added\r\n    $('.toast:last').toast(\r\n    {\r\n        autohide: autoHide,\r\n        delay: TOAST_DELAY_SECONDS * 1000\r\n    }\r\n    ).toast('show');\r\n}\r\n\r\n// re-initializes tooltips (eg: datatables ajax callback)\r\nfunction resetToolTips() {\r\n    $('[data-toggle=\"tooltip\"]').tooltip('update');\r\n}\r\n\r\n// used to interpret a C# Dictionary<string, string> and output an html list <li>\r\nfunction buildTooltipList(dictionary) {\r\n    var list = '';\r\n\r\n    // build list items\r\n    var infoItems = [];\r\n    for (var info in dictionary) {\r\n\r\n        if (dictionary.hasOwnProperty(info)) {\r\n            infoItems.push('<li><strong>' + info + ':&nbsp;</strong>' + dictionary[info] + '</li>');\r\n        }\r\n\r\n    }\r\n\r\n    // combine into list\r\n    if (infoItems.length > 0) {\r\n\r\n        list = \"<ul class='tooltip-list'>\";\r\n        $(infoItems).each(function (i, o) {\r\n            list += o;\r\n        });\r\n        list += '</ul>';\r\n\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n// gets the last action date from the C# object 'Admin/Sessions/GetSessionResponse.cs' (JSON)\r\nfunction getLastActionDate(session, defaultExpirationMinutes) {\r\n    var lastSessionLogDate = session.last_Session_Event_Date ? new Date(session.last_Session_Event_Date) : null;\r\n    var lastSessionEventDate = session.last_Session_Log_Date ? new Date(session.last_Session_Log_Date) : null;\r\n    var lastDate = '';\r\n\r\n    // if we have both dates, compare them otherwise interrogate either one\r\n    if (lastSessionLogDate && lastSessionEventDate) {\r\n\r\n        if (lastSessionLogDate > lastSessionEventDate) {\r\n            lastDate = lastSessionLogDate;\r\n        } else {\r\n            lastDate = lastSessionEventDate;\r\n        }\r\n\r\n    } else {\r\n\r\n        if (lastSessionLogDate) {\r\n            lastDate = lastSessionLogDate;\r\n        }\r\n        else if (lastSessionEventDate) {\r\n            lastDate = lastSessionEventDate;\r\n        } else {\r\n            var startDate = new Date(session.entity.created_Date);\r\n            lastDate = new Date(startDate.setMinutes(startDate.getMinutes() + defaultExpirationMinutes));\r\n        }\r\n\r\n    }\r\n\r\n    return lastDate;\r\n}\r\n"]}