{"version":3,"sources":["chart-area-demo.js","chart-bar-demo.js","chart-pie-demo.js","site.js"],"names":["number_format","number","decimals","dec_point","thousands_sep","replace","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixedFix","split","length","Array","join","ctx","Chart","defaults","global","defaultFontFamily","defaultFontColor","document","getElementById","myLineChart","type","data","labels","datasets","label","lineTension","backgroundColor","borderColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","pointBorderWidth","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","time","unit","gridLines","display","drawBorder","ticks","maxTicksLimit","yAxes","callback","value","index","values","color","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","borderWidth","xPadding","yPadding","displayColors","intersect","mode","caretPadding","callbacks","tooltipItem","chart","datasetIndex","yLabel","myPieChart","hoverBackgroundColor","hoverBorderColor","cutoutPercentage","myBarChart","maxBarThickness","min","max","GlobalViewModel","configJson","configItems","JSON","parse","Items","TOAST_DELAY_SECONDS","filter","item","Key","Int_Value","IDLE_TIMEOUT_SECONDS","IDLE_TIMEOUT_MODAL_SECONDS","AUTO_LOGOUT_IS_ENABLED","Boolean_Value","this","initialise","$","ready","toast","autohide","delay","tooltip","on","dataContainer","parent","siblings","empty","propertyName","attr","val","forEach","append","keydown","e","el","preventDefault","test","id","relatedTarget","find","datetimepicker","format","date","moment","fn","dataTable","ext","errMode","settings","helpPage","message","showNotification","console","log","enableAutoLogout","expiryModalSeconds","expirySeconds","expiryTime","Date","getTime","isLoggingOut","mousemove","isModalOpen","resetExpiryTime","keypress","click","setInterval","IDLE_SECONDS","modal","backdrop","keyboard","second","minute","secondsRemaining","floor","window","location","innerText","is","autoHide","typeCss","resetToolTips","buildTooltipList","dictionary","list","infoItems","info","hasOwnProperty","push","each","i","o","getLastActionDate","session","defaultExpirationMinutes","lastSessionLogDate","last_Session_Event_Date","lastSessionEventDate","last_Session_Log_Date","lastDate","startDate","entity","created_Date","setMinutes","getMinutes"],"mappings":"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","file":"site.min.js","sourcesContent":["// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\nfunction number_format(number, decimals, dec_point, thousands_sep) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + '').replace(',', '').replace(' ', '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n    s = '',\n    toFixedFix = function(n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n\n// Area Chart Example\nvar ctx = document.getElementById(\"myAreaChart\");\nif (ctx) {\n    var myLineChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n            datasets: [{\n                label: \"Earnings\",\n                lineTension: 0.3,\n                backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n                borderColor: \"rgba(78, 115, 223, 1)\",\n                pointRadius: 3,\n                pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n                pointBorderColor: \"rgba(78, 115, 223, 1)\",\n                pointHoverRadius: 3,\n                pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n                pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n                pointHitRadius: 10,\n                pointBorderWidth: 2,\n                data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],\n            }],\n        },\n        options: {\n            maintainAspectRatio: false,\n            layout: {\n                padding: {\n                    left: 10,\n                    right: 25,\n                    top: 25,\n                    bottom: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    time: {\n                        unit: 'date'\n                    },\n                    gridLines: {\n                        display: false,\n                        drawBorder: false\n                    },\n                    ticks: {\n                        maxTicksLimit: 7\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        maxTicksLimit: 5,\n                        padding: 10,\n                        // Include a dollar sign in the ticks\n                        callback: function (value, index, values) {\n                            return '$' + number_format(value);\n                        }\n                    },\n                    gridLines: {\n                        color: \"rgb(234, 236, 244)\",\n                        zeroLineColor: \"rgb(234, 236, 244)\",\n                        drawBorder: false,\n                        borderDash: [2],\n                        zeroLineBorderDash: [2]\n                    }\n                }],\n            },\n            legend: {\n                display: false\n            },\n            tooltips: {\n                backgroundColor: \"rgb(255,255,255)\",\n                bodyFontColor: \"#858796\",\n                titleMarginBottom: 10,\n                titleFontColor: '#6e707e',\n                titleFontSize: 14,\n                borderColor: '#dddfeb',\n                borderWidth: 1,\n                xPadding: 15,\n                yPadding: 15,\n                displayColors: false,\n                intersect: false,\n                mode: 'index',\n                caretPadding: 10,\n                callbacks: {\n                    label: function (tooltipItem, chart) {\n                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\n                    }\n                }\n            }\n        }\n    });\n}\n","// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\nfunction number_format(number, decimals, dec_point, thousands_sep) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + '').replace(',', '').replace(' ', '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n    s = '',\n    toFixedFix = function(n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n\n// Bar Chart Example\nvar ctx = document.getElementById(\"myBarChart\");\nif (ctx) {\n    var myBarChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n            datasets: [{\n                label: \"Revenue\",\n                backgroundColor: \"#4e73df\",\n                hoverBackgroundColor: \"#2e59d9\",\n                borderColor: \"#4e73df\",\n                data: [4215, 5312, 6251, 7841, 9821, 14984],\n            }],\n        },\n        options: {\n            maintainAspectRatio: false,\n            layout: {\n                padding: {\n                    left: 10,\n                    right: 25,\n                    top: 25,\n                    bottom: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    time: {\n                        unit: 'month'\n                    },\n                    gridLines: {\n                        display: false,\n                        drawBorder: false\n                    },\n                    ticks: {\n                        maxTicksLimit: 6\n                    },\n                    maxBarThickness: 25,\n                }],\n                yAxes: [{\n                    ticks: {\n                        min: 0,\n                        max: 15000,\n                        maxTicksLimit: 5,\n                        padding: 10,\n                        // Include a dollar sign in the ticks\n                        callback: function (value, index, values) {\n                            return '$' + number_format(value);\n                        }\n                    },\n                    gridLines: {\n                        color: \"rgb(234, 236, 244)\",\n                        zeroLineColor: \"rgb(234, 236, 244)\",\n                        drawBorder: false,\n                        borderDash: [2],\n                        zeroLineBorderDash: [2]\n                    }\n                }],\n            },\n            legend: {\n                display: false\n            },\n            tooltips: {\n                titleMarginBottom: 10,\n                titleFontColor: '#6e707e',\n                titleFontSize: 14,\n                backgroundColor: \"rgb(255,255,255)\",\n                bodyFontColor: \"#858796\",\n                borderColor: '#dddfeb',\n                borderWidth: 1,\n                xPadding: 15,\n                yPadding: 15,\n                displayColors: false,\n                caretPadding: 10,\n                callbacks: {\n                    label: function (tooltipItem, chart) {\n                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\n                    }\n                }\n            },\n        }\n    });\n}\n","// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\n// Pie Chart Example\nvar ctx = document.getElementById(\"myPieChart\");\nif (ctx) {\n    var myPieChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n            labels: [\"Direct\", \"Referral\", \"Social\"],\n            datasets: [{\n                data: [55, 30, 15],\n                backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\n                hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\n                hoverBorderColor: \"rgba(234, 236, 244, 1)\",\n            }],\n        },\n        options: {\n            maintainAspectRatio: false,\n            tooltips: {\n                backgroundColor: \"rgb(255,255,255)\",\n                bodyFontColor: \"#858796\",\n                borderColor: '#dddfeb',\n                borderWidth: 1,\n                xPadding: 15,\n                yPadding: 15,\n                displayColors: false,\n                caretPadding: 10,\n            },\n            legend: {\n                display: false\n            },\n            cutoutPercentage: 80,\n        },\n    });\n}\n","// default values \r\nTOAST_DELAY_SECONDS = 6; // toasts last 6 seconds\r\nIDLE_SECONDS = 0;\r\nIDLE_TIMEOUT_SECONDS = 120; // 2 minutes\r\nIDLE_TIMEOUT_MODAL_SECONDS = IDLE_TIMEOUT_SECONDS - 30; // 30 seconds before session expires\r\nAUTO_LOGOUT_IS_ENABLED = false;\r\n\r\nfunction GlobalViewModel(configJson) {\r\n    var self = this;\r\n\r\n    var configItems = JSON.parse(configJson).Items; \r\n\r\n    TOAST_DELAY_SECONDS = configItems.filter(function (item) { return item.Key === 'TOAST_DELAY_SECONDS'; })[0].Int_Value;\r\n    IDLE_TIMEOUT_SECONDS = configItems.filter(function (item) { return item.Key === 'IDLE_TIMEOUT_SECONDS'; })[0].Int_Value;\r\n    IDLE_TIMEOUT_MODAL_SECONDS = configItems.filter(function (item) { return item.Key === 'IDLE_TIMEOUT_MODAL_SECONDS'; })[0].Int_Value; \r\n    AUTO_LOGOUT_IS_ENABLED = configItems.filter(function (item) { return item.Key === 'AUTO_LOGOUT_IS_ENABLED'; })[0].Boolean_Value;\r\n\r\n    self.initialise = function () {\r\n\r\n        $(document).ready(function () {\r\n\r\n            // enable toast notifications\r\n            $('.toast').toast(\r\n                {\r\n                    autohide: true,\r\n                    delay: TOAST_DELAY_SECONDS * 1000\r\n                }\r\n            ).toast('show');\r\n\r\n            // enable tooltips\r\n            $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n            // multiselect component - form value handler\r\n            $('.selectpicker').on('changed.bs.select', function () {\r\n\r\n                var dataContainer = $(this).parent('.dropdown').siblings('.selectpicker-data');\r\n                dataContainer.empty();\r\n\r\n                var id = $(this).attr('id');\r\n                var propertyName = id.replace('_', '.');\r\n\r\n                var selectedValues = $(this).val();\r\n                selectedValues.forEach(function (value) {\r\n                    dataContainer.append(\"<input type='hidden' name='\" + propertyName + \"' value=\" + value + \"></div>\");\r\n                });\r\n\r\n            });\r\n\r\n            // datetime picker - prevent explicit user input\r\n            $(\".datetimepicker-input\").keydown(function (e, el) {\r\n                e.preventDefault();\r\n                return false();\r\n            });\r\n\r\n            // number input only\r\n            $(\".input-only-number\").keydown(function (e, el) {\r\n                if (/^\\d*$/.test(value)) {\r\n                    return true;\r\n                }\r\n                e.preventDefault();\r\n                return false();\r\n            });\r\n\r\n            // modals - pass id parameter to hidden field on modal\r\n            $('.modal').on('show.bs.modal', function (e) {\r\n\r\n                var id = $(e.relatedTarget).data('target-id');\r\n\r\n                // populate modal form id element\r\n                $(this).find('input[type=hidden][name=\"Id\"]').val(id);\r\n\r\n            });\r\n\r\n            // datapickers\r\n            $(\".datepicker\").datetimepicker({\r\n                format: 'DD/MM/YYYY'\r\n            });\r\n\r\n            $(\".timepicker\").datetimepicker({\r\n                format: 'hh:mm A'\r\n            });\r\n\r\n            $(\".datetimepicker\").datetimepicker({\r\n                format: 'DD/MM/YYYY hh:mm A'\r\n            });\r\n\r\n            $(\".datepicker, .datetimepicker, .datepicker\").on(\"change.datetimepicker\", function (e) {\r\n                if (e.date) {\r\n                    $(this).attr('data-date', moment(e.date).format('DD/MMMM/YYYY'));\r\n                }\r\n            });\r\n\r\n            // datatables ajax error handling\r\n            if ($.fn.dataTable) {\r\n                $.fn.dataTable.ext.errMode = function (settings, helpPage, message) {\r\n                    showNotification(message, 'Error', false);\r\n                    console.log(message);\r\n                };\r\n            }\r\n\r\n            // auto logout feature\r\n            if (AUTO_LOGOUT_IS_ENABLED === true) {\r\n                enableAutoLogout(IDLE_TIMEOUT_MODAL_SECONDS, IDLE_TIMEOUT_SECONDS);\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\n// enables the autologut feature\r\nfunction enableAutoLogout(expiryModalSeconds, expirySeconds) {\r\n    var expiryTime = new Date().getTime() + (expirySeconds * 1000);\r\n\r\n    if ($('#modalAutoLogout')[0]) { // check if we have the modal available\r\n\r\n        var isLoggingOut = false;\r\n\r\n        // reset idle timer on mouse / keypress movement\r\n        $(this).mousemove(function (e) {\r\n            if (isModalOpen() === false) {\r\n                resetExpiryTime(expirySeconds);\r\n            }\r\n        });\r\n        $(this).keypress(function (e) {\r\n            if (isModalOpen() === false) {\r\n                resetExpiryTime(expirySeconds);\r\n            }\r\n        });\r\n\r\n        $('#btnDismissAutoLogout').click(function () {\r\n            resetExpiryTime(expirySeconds);\r\n        });\r\n\r\n        setInterval(function () {\r\n            IDLE_SECONDS++;\r\n\r\n            if (IDLE_SECONDS >= expiryModalSeconds) {\r\n                $('#modalAutoLogout').modal({\r\n                    backdrop: \"static\",\r\n                    keyboard: false\r\n                });\r\n\r\n                const second = 1000,\r\n                    minute = second * 60,\r\n                    hour = minute * 60,\r\n                    day = hour * 24;\r\n\r\n                var secondsRemaining = Math.floor(((getExpiryTime() - new Date().getTime()) % (minute)) / second);\r\n                if (secondsRemaining < 0 && isLoggingOut === false) {\r\n                    secondsRemaining = 0;\r\n                    isLoggingOut = true;\r\n                    window.location = '/Account/Logout';\r\n                    return;\r\n                }\r\n\r\n                document.getElementById('txtAutoLogoutSecondsRemaining').innerText = secondsRemaining;\r\n            }\r\n        }, 1000); // poll every 1 second\r\n    }\r\n\r\n    function isModalOpen() {\r\n        return $('#modalAutoLogout').is(':visible');\r\n    }\r\n\r\n    function getExpiryTime() {\r\n        return expiryTime;\r\n    }\r\n\r\n    function resetExpiryTime(expirySeconds) {\r\n        expiryTime = new Date().getTime() + (expirySeconds * 1000);\r\n        IDLE_SECONDS = 0;\r\n    }\r\n}\r\n\r\n// displays a toast notification\r\nfunction showNotification(message, type, autoHide) {\r\n    var typeCss = '';\r\n    if (type === 'Information') {\r\n        typeCss = 'bg-primary';\r\n    }\r\n    if (type === 'Success') {\r\n        typeCss = 'bg-success';\r\n    }\r\n    if (type === 'Warning') {\r\n        typeCss = 'bg-warning';\r\n    }\r\n    if (type === 'Error') {\r\n        typeCss = 'bg-danger';\r\n    }\r\n\r\n    $(\"#notifications-container\").append('<div class=\"toast ml-auto m-4\" role=\"alert\">' +\r\n        '<div class=\"toast-header ' + typeCss + '\">' +\r\n        '<strong class=\"mr-auto text-white\">' + type + '</strong>' +\r\n        '<button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">' +\r\n        '<span aria-hidden=\"true\">×</span>' +\r\n        '</button>' +\r\n        '</div>' +\r\n        '<div class=\"toast-body\">' +\r\n        message +\r\n        '</div>' +\r\n        '</div>');\r\n\r\n    $('.toast:last').toast(\r\n        {\r\n            autohide: autoHide,\r\n            delay: TOAST_DELAY_SECONDS\r\n        }\r\n    ).toast('show');\r\n}\r\n\r\n// re-initializes tooltips (eg: datatables ajax callback)\r\nfunction resetToolTips() {\r\n    $('[data-toggle=\"tooltip\"]').tooltip('update');\r\n}\r\n\r\n// used to interpret a C# dictionary (JSON) and output an html list <li>\r\nfunction buildTooltipList(dictionary) {\r\n    var list = '';\r\n\r\n    // build list items\r\n    var infoItems = [];\r\n    for (var info in dictionary) {\r\n\r\n        if (dictionary.hasOwnProperty(info)) {\r\n            infoItems.push('<li><strong>' + info + ':&nbsp;</strong>' + dictionary[info] + '</li>');\r\n        }\r\n\r\n    }\r\n\r\n    // combine into list\r\n    if (infoItems.length > 0) {\r\n\r\n        list = \"<ul class='tooltip-list'>\";\r\n        $(infoItems).each(function (i, o) {\r\n            list += o;\r\n        });\r\n        list += '</ul>';\r\n\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n// gets the last action date from the C# object 'Admin/Sessions/GetSessionResponse.cs' (JSON)\r\nfunction getLastActionDate(session, defaultExpirationMinutes) {\r\n    var lastSessionLogDate = session.last_Session_Event_Date ? new Date(session.last_Session_Event_Date) : null;\r\n    var lastSessionEventDate = session.last_Session_Log_Date ? new Date(session.last_Session_Log_Date) : null;\r\n    var lastDate = '';\r\n\r\n    // if we have both dates, compare them otherwise interrogate either one\r\n    if (lastSessionLogDate && lastSessionEventDate) {\r\n\r\n        if (lastSessionLogDate > lastSessionEventDate) {\r\n            lastDate = lastSessionLogDate;\r\n        } else {\r\n            lastDate = lastSessionEventDate;\r\n        }\r\n\r\n    } else {\r\n\r\n        if (lastSessionLogDate) {\r\n            lastDate = lastSessionLogDate;\r\n        }\r\n        else if (lastSessionEventDate) {\r\n            lastDate = lastSessionEventDate;\r\n        } else {\r\n            var startDate = new Date(session.entity.created_Date);\r\n            lastDate = new Date(startDate.setMinutes(startDate.getMinutes() + defaultExpirationMinutes));\r\n        }\r\n\r\n    }\r\n\r\n    return lastDate;\r\n}"]}