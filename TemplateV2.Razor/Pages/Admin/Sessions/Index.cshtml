@page
@model ManageSessionsModel
@{
    ViewData["Title"] = "Sessions";
}

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-4 text-gray-800">@ViewData["Title"] </h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3 text-left">
            <a id="btnRecentSessions" href="#" class="btn btn-primary btn-icon-split mb-2 mb-lg-0 ml-2">
                <span class="icon text-white-50">
                    <i class="fas fa-history"></i>
                </span>
                <span class="text">Last 24 hours</span>
            </a>

            <a href="#" class="btn btn-primary btn-icon-split mb-2 mb-lg-0 ml-2" data-toggle="modal" data-target="#modalLastXDays">
                <span class="icon text-white-50">
                    <i class="fas fa-calendar-week"></i>
                </span>
                <span class="text">Last x days</span>
            </a>

            <a href="#" class="btn btn-primary btn-icon-split mb-2 mb-lg-0 ml-2" data-toggle="modal" data-target="#modalFilterByDate">
                <span class="icon text-white-50">
                    <i class="fas fa-calendar-day"></i>
                </span>
                <span class="text">Filter by day</span>
            </a>

            <a href="#" class="btn btn-primary btn-icon-split mb-2 mb-lg-0 ml-2" data-toggle="modal" data-target="#modalFilterByUser">
                <span class="icon text-white-50">
                    <i class="fas fa-user"></i>
                </span>
                <span class="text">Filter by user</span>
            </a>

            <a id="btnReloadData" href="#" class="btn btn-primary btn-icon-split float-right">
                <span class="icon text-white">
                    <i class="fas fa-sync"></i>
                </span>
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="dataTable" class="table table-striped" style="width: 100%;" cellspacing="0">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Date</th>
                            <th>Username</th>
                            <th>Duration</th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

@* filter by last x days *@
<div class="modal fade" id="modalLastXDays" tabindex="-1" role="dialog" aria-labelledby="modalLastXDaysLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLastXDaysLabel">Filter by past days</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <form method="post" role="form">
                            <p>How many days in the past do you want to view?</p>
                            <div class="form-group">
                                <label for="txtLastXDays" class="control-label">Days</label>
                                <input type="number" id="txtLastDays" class="form-control" />
                            </div>
                            <div class="form-group mt-3">
                                <button id="btnLastXDays" type="button" class="btn btn-primary btn-block">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* filter by date *@
<div class="modal fade" id="modalFilterByDate" tabindex="-1" role="dialog" aria-labelledby="modalFilterByDayLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFilterByDayLabel">Filter by day</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <form method="post" role="form">
                            <p> Which day do you want to view sessions for?</p>
                            <div class="form-group">
                                <label for="txtDay" class="control-label">Date</label>
                                <div id="dateDay" class="input-group mb-3 date datepicker" data-target-input="nearest">
                                    <input id="txtDay" type="text" class="form-control datetimepicker-input" data-target="#dateDay" />
                                    <div class="input-group-append" data-target="#dateDay" data-toggle="datetimepicker">
                                        <div class="input-group-text bg-primary text-white">
                                            <i class="fas fa-calendar-day"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group mt-3">
                                <button id="btnFilterByDate" type="button" class="btn btn-primary btn-block">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* filter by user *@
<div class="modal fade" id="modalFilterByUser" tabindex="-1" role="dialog" aria-labelledby="modalFilterByUserLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFilterByUserLabel">Filter by user</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <form method="post" role="form">
                            <p>Fill in 1 field to search for a user</p>
                            <div class="form-row">
                                <div class="form-group col-6">
                                    <label for="txtUserId" class="control-label">User ID</label>
                                    <input id="txtUserId" class="form-control" />
                                </div>
                                <div class="form-group col-6">
                                    <label for="txtUsername" class="control-label">Username</label>
                                    <input id="txtUsername" class="form-control" />
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-6">
                                    <label for="txtEmailAddress" class="control-label">Email address</label>
                                    <input id="txtEmailAddress" class="form-control" />
                                </div>
                                <div class="form-group col-6">
                                    <label for="txtMobileNumber" class="control-label">Mobile number</label>
                                    <input id="txtMobileNumber" class="form-control" />
                                </div>
                            </div>
                            <div class="form-group mt-3">
                                <button id="btnFilterByUser" type="button" class="btn btn-primary btn-block">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts  {

    <script type="text/javascript">

        $(document).ready(function () {

            var groupedColumn = 0;
            var table = loadDataTable('@Url.Page("/Admin/Sessions/Index", "Recent")');

            $("#btnRecentSessions").click(function () {
                loadDataTable('@Url.Page("/Admin/Sessions/Index", "Recent")');
            });

            $("#btnLastXDays").click(function () {
                var days = $("#txtLastDays").val();
                loadDataTable('@Url.Page("/Admin/Sessions/Index", "LastXDays")', { days: days });
                $('#modalLastXDays').modal('toggle');
            });

            $("#btnFilterById").click(function () {
                var id = $("#txtSessionId").val();
                loadDataTable('@Url.Page("/Admin/Sessions/Index", "FilterById")', { id: id });
                $('#modalFilterById').modal('toggle');
            });

            $("#btnFilterByDate").click(function () {
                var date = $("#dateDay").attr('data-date');
                loadDataTable('@Url.Page("/Admin/Sessions/Index", "FilterByDate")', { date: date });
                $('#modalFilterByDate').modal('toggle');
             });

            $("#btnFilterByUser").click(function () {
                var userId = $("#txtUserId").val();
                var username = $("#txtUsername").val();
                var email = $("#txtEmailAddress").val();
                var mobileNumber = $("#txtMobileNumber").val();

                if (userId != '') {
                    loadDataTable('@Url.Page("/Admin/Sessions/Index", "FilterByUserId")', { userId: userId });
                } else
                if (username != '') {
                    loadDataTable('@Url.Page("/Admin/Sessions/Index", "FilterByUsername")', { username: username });
                } else
                if (email != '') {
                    loadDataTable('@Url.Page("/Admin/Sessions/Index", "FilterByEmailAddress")', { emailAddress: email });
                } else
                if (mobileNumber != '') {
                    loadDataTable('@Url.Page("/Admin/Sessions/Index", "FilterByMobileNumber")', { mobileNumber: mobileNumber });
                }

                $('#modalFilterByUser').modal('toggle');

                $("#txtUserId").val('');
                $("#txtUsername").val('');
                $("#txtEmailAddress").val('');
                $("#txtMobileNumber").val('');
            });

            $("#btnReloadData").click(function () {
                table.ajax.reload();
            });

            function loadDataTable(url, params) {

                if (table) {
                    table.destroy();
                }

                table = $('#dataTable').DataTable({
                    ajax: {
                        url: url,
                        data: params,
                        dataSrc: "sessions",
                    },
                    columns: [
                        {
                            name: "date",
                            data: "entity.created_Date",
                            render: {
                                sort: function (data) {
                                    return moment(data).unix();
                                },
                                filter: function (data) {
                                    return moment(data).format('dddd - Do MMMM YYYY');
                                }
                            }
                        },
                        {
                            name: "time",
                            data: "entity.created_Date",
                            orderDataType: 'time',
                            render: function (data) {
                                return moment(data).format('hh: mm A');
                            }
                        },
                        {
                            data: "username"
                        },
                        {
                            name: 'duration',
                            data: "entity.created_Date",
                            render: {
                                display: function (data, type, row, meta) {
                                    var lastDate = getLastActionDate(row, @Model.SessionExpirationMinutes)

                                    var duration = countdown(new Date(data), lastDate, countdown.HOURS | countdown.MINUTES).toString();
                                    return duration == '' ? 'under a minute' : duration;
                                },
                                sort: function (data, type, row, meta) {
                                    var lastDate = getLastActionDate(row, @Model.SessionExpirationMinutes)

                                    var startDate = new Date(data);
                                    return (lastDate - startDate);
                                }
                            }
                        },
                        {
                            render: function (data, type, row, meta) {
                                var actionButtons = '';

                                actionButtons += '<a href="/Admin/Sessions/View?id=' + row.entity.id + '" class="text-decoration-none">';
                                actionButtons += '<i class="fas fa-eye" data-toggle="tooltip" data-placement="left" title="View"></i>';
                                actionButtons += '</a>';

                                return actionButtons;
                            }
                        }
                    ],
                    columnDefs: [
                        { targets: groupedColumn, visible: false, type: 'time' },
                        { targets: [0, 3], type: 'time' },
                        { targets: 2, orderable: false },
                        { targets: -1, orderable: false, className: 'table-actions' }
                    ],
                    order: [
                        [0, 'desc'],
                    ],
                    processing: true,
                    language: {
                        processing: '<div class="spinner-border text-primary" role="status"></div>'
                    },
                    drawCallback: function (settings) {
                        resetToolTips();

                        var api = this.api();
                        var rows = api.rows({ page: 'current' }).nodes();
                        var last = null;

                        api.column(groupedColumn, { page: 'current' }).data().each(function (group, i) {

                            var date = new Date(group);
                            date.setHours(0);
                            date.setMinutes(0);
                            date.setSeconds(0);

                            group = date.toString();

                            if (last !== group) {
                                $(rows).eq(i).before(
                                    '<tr class="group"><td colspan="5" class="font-weight-bold bg-primary text-white">' + moment(date).format('dddd - Do MMMM YYYY') + '</td></tr>'
                                );

                                last = group;
                            }
                        });
                    }
                });

                return table;

            }

        });

    </script>

}
